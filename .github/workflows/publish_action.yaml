name: publish_action

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  REGISTRY_IMAGE: ghcr.io/allenporter/renovate-helm-releases

jobs:
  check_tag:
    runs-on: ubuntu-20.04
    outputs:
      run_other_jobs: ${{ steps.check-tag.outputs.run_jobs }}
    steps:
      - name: check tag ${{ github.ref }}
        id: check-tag
        run: |
          if [[ "${{ github.ref }}" =~ refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "::set-output name=run_jobs::true"
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "::set-output name=run_jobs::true"
          else
            echo "::set-output name=run_jobs::false"
          fi

  docker:
    runs-on: ubuntu-20.04
    needs: [check_tag]
    if: needs.check_tag.outputs.run_other_jobs == 'true'
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Prepare
      id: prep
      run: |
        VERSION=edge
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        fi
        # v1.0.0
        TAGS="${REGISTRY_IMAGE}:${VERSION}"
        # v1.0.0,v1.0
        TAGS="${TAGS},${REGISTRY_IMAGE}:${VERSION%.*}"
        # v1.0.0,v1.0,v1
        TAGS="${TAGS},${REGISTRY_IMAGE}:${VERSION%%.*}"
        if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          # :v1.0.0,v1.0,:v1,:latest
          TAGS="${TAGS},${REGISTRY_IMAGE}:latest"
        fi
        echo ::set-output name=tags::${TAGS}

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.event.repository.name }}
        restore-keys: |
          ${{ runner.os }}-buildx-${{ github.event.repository.name }}

    - name: Log in to the Container registry
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        builder: ${{ steps.buildx.outputs.name }}
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.prep.outputs.tags }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

    - name: Create additional version tags
      uses: vweevers/additional-tags-action@v1.0.0

    - name: Create latest tag
      uses: EndBug/latest-tag@v1.4.0
